#`version: "3.5"` указывает версию формата файла Docker Compose, который будет использоваться. В данном случае это версия 3.5. Эта версия поддерживает такие возможности, как объекты `config`, `секреты` и опции `deploy` для развертывания сервисов в рое.
version: "3.5"

#Это определение сети под названием "docker_lasp" с именем сети по умолчанию. Эта сеть может использоваться для соединения различных служб, определенных в файле Docker Compose, позволяя им взаимодействовать друг с другом.
networks:
  docker_lasp:
    name: $DEFAULT_NETWORK

services:
  #`zabbix-web:` - это сервис в файле Docker Compose, который развертывает фронтенд Zabbix на веб-сервере Nginx с поддержкой базы данных PostgreSQL. Он отвечает за предоставление веб-интерфейса для мониторинга и управления системой Zabbix. Служба настроена с учетом ограничений на ресурсы, переменных окружения, меток и зависимостей от других служб в той же сети Docker. Он также настроен на использование Traefik в качестве обратного прокси и поставщика SSL-сертификатов.
  zabbix-web:
    #Установка ограничений и резервирования ресурсов для службы `zabbix-web` в файле Docker Compose. Он ограничивает использование CPU до 0.70 и памяти до 1G, а также резервирует для службы минимум 0.50 CPU и 512M памяти.
    deploy:
      resources:
        #Установка ограничений на ресурсы для службы `zabbix-web` в файле Docker Compose. Он ограничивает использование процессора до 0,70 и памяти до 1 Гб.
        limits:
          cpus: "0.70"
          memory: "1G"
        #`reservations` - это параметр конфигурации в файле Docker Compose, который устанавливает минимальное количество ресурсов CPU и памяти, которые должны быть зарезервированы для службы. В данном случае для службы `zabbix-web` резервируется минимум 0,50 CPU и 512M памяти. Это гарантирует, что у службы будет достаточно ресурсов для нормальной работы, даже если другие службы в той же сети Docker используют много ресурсов.
        reservations:
          cpus: "0.50"
          memory: "512M"
    #`env_file: - "zabbix.env"` - это параметр конфигурации в файле Docker Compose, который указывает путь к файлу, содержащему переменные окружения для службы. Файл `zabbix.env` содержит переменные окружения, которые используются службами Zabbix для настройки различных аспектов системы, таких как параметры подключения к базе данных, параметры сервера и агента, а также расположение файлов журналов. Использование файла окружения позволяет легко управлять конфигурацией и обновлять ее без необходимости изменять сам файл Docker Compose.
    env_file:
      - "zabbix.env"
    #`image: zabbix/zabbix-web-nginx-pgsql:alpine-7.0-latest` указывает образ Docker, который будет использоваться для создания службы `zabbix-web`. Этот образ предоставляется командой Zabbix и содержит предварительно настроенный веб-сервер Nginx с поддержкой базы данных PostgreSQL, а также фронтенд-приложение Zabbix. Тег `alpine-7.0-latest` указывает версию образа для использования.
    image: zabbix/zabbix-web-nginx-pgsql:alpine-7.0-latest
    # Секция `labels` в файле Docker Compose используется для добавления метаданных к контейнерам и сервисам Docker. В данном случае метки используются для настройки Traefik, обратного прокси и поставщика SSL-сертификатов, для маршрутизации трафика к службе `zabbix-web`. В метках указаны точки входа, правила, служба и преобразователь SSL-сертификатов для маршрутизатора Traefik. Кроме того, метки предоставляют информацию о фронтенде Zabbix, такую как его описание, компания, компонент, веб-сервер, тип базы данных и операционная система. Эти метки можно использовать для мониторинга, протоколирования и других целей.
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.zabbix-web.entrypoints=websecure"
      #`- "traefik.http.routers.zabbix-web.rule=Host(`monitoring.EXAMPLE.COM`)"` - это метка в файле Docker Compose, которая настраивает Traefik, обратный прокси и поставщика SSL-сертификатов, на маршрутизацию трафика в службу `zabbix-web`. Она указывает, что входящие запросы с именем хоста `monitoring.EXAMPLE.COM` должны направляться на сервис `zabbix-web`. Эта метка является частью набора меток, которые настраивают Traefik на обработку SSL-сертификатов, балансировку нагрузки и другие аспекты маршрутизации трафика на фронтенд Zabbix.
      - "traefik.http.routers.zabbix-web.rule=Host(`monitoring.EXAMPLE.COM`)"
      - "traefik.http.routers.zabbix-web.service=zabbix-web"
      - "traefik.http.routers.zabbix-web.tls.certresolver=letsencrypt"
      #`- "traefik.http.services.zabbix-web.loadbalancer.server.port=8080"` - это метка в файле Docker Compose, которая настраивает Traefik на использование порта 8080 в качестве порта сервера балансировки нагрузки для службы `zabbix-web`. Эта метка используется в сочетании с другими метками для настройки Traefik в качестве обратного прокси и поставщика SSL-сертификатов для фронтенда Zabbix. Указывая порт сервера балансировщика нагрузки, Traefik знает, куда направлять входящие запросы для службы `zabbix-web`.
      - "traefik.http.services.zabbix-web.loadbalancer.server.port=8080"
      #`- "com.zabbix.description=Zabbix frontend на веб-сервере Nginx с поддержкой базы данных PostgreSQL"
      # - "com.zabbix.company=Zabbix LLC"
      # - "com.zabbix.component=zabbix-frontend"
      # - "com.zabbix.webserver=nginx"
      # - "com.zabbix.dbtype=pgsql"
      # - "com.zabbix.os=linux"` строки добавляют метки метаданных к службе `zabbix-web` в файле Docker Compose. Эти метки предоставляют информацию о фронтенде Zabbix, такую как его описание, компания, компонент, веб-сервер, тип базы данных и операционная система. Эти метки можно использовать для мониторинга, протоколирования и других целей.
      - "com.zabbix.description=Zabbix frontend on Nginx web-server with PostgreSQL database support"
      - "com.zabbix.company=Zabbix LLC"
      - "com.zabbix.component=zabbix-frontend"
      - "com.zabbix.webserver=nginx"
      - "com.zabbix.dbtype=pgsql"
      - "com.zabbix.os=linux"
    #`restart: always` - это параметр конфигурации в файле Docker Compose, который указывает, что контейнер всегда должен перезапускаться, если он останавливается по какой-либо причине, например, в результате сбоя или ручной остановки. Это гарантирует, что служба всегда будет доступна и запущена, даже в случае неожиданных сбоев.
    restart: always
    #`container_name: zabbix-web` задает имя контейнера Docker, который будет создан для службы `zabbix-web` в файле Docker Compose. Это позволяет легко идентифицировать контейнер и управлять им с помощью команд и инструментов Docker. Если этот параметр не указан, Docker автоматически сгенерирует случайное имя для контейнера.
    container_name: zabbix-web
    #`depends_on` - это параметр конфигурации в файле Docker Compose, который указывает сервисы, от которых зависит конкретный сервис. В данном случае служба `zabbix-web` зависит от служб `zabbix-java-gateway` и `zabbix-server`. Это означает, что служба `zabbix-web` не запустится до тех пор, пока не будут запущены службы `zabbix-java-gateway` и `zabbix-server`. Это гарантирует, что фронтенд Zabbix имеет доступ к необходимым сервисам бэкенда и может функционировать должным образом.
    depends_on:
      - "zabbix-java-gateway"
      - "zabbix-server"
    #`networks: - "docker_net"` определяет сеть Docker, к которой будут подключены сервисы в этом файле Docker Compose. Сеть называется "docker_net" и используется для того, чтобы службы могли общаться друг с другом по сети. Подключив службы к одной сети, они могут легко обнаруживать и взаимодействовать друг с другом, используя имена своих служб в качестве имен хостов. Это упрощает конфигурирование и развертывание служб и позволяет им работать вместе как единая система.
    networks:
      - "docker_net"
